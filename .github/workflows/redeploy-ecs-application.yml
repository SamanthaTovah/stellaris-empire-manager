name: Build, Push, and Deploy ECR/ECS

on:
  push:
    branches:
      - master

jobs:
  redploy-esc-application:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: eu-north-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.ECR_URI }}:latest
            ${{ secrets.ECR_URI }}:${{ github.sha }}

      - name: Update Task Definition and ESC Service
        id: task-def-update
        run: |
          TASK_DEF=$(cat .aws/ecs-task-definition.json)
          NEW_TASK_DEF=$(echo $TASK_DEF | jq --compact-output --arg IMAGE_URI "${{ secrets.ECR_URI }}:${{ github.sha }}" '.containerDefinitions[0].image = $IMAGE_URI')
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEF" --query "taskDefinition.taskDefinitionArn" --output text)
          echo "::set-output name=new_task_def_arn::$NEW_TASK_DEF_ARN"
          aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEF"
          aws ecs update-service --cluster empire-stellaris-manager --service stellaris-empire-manager-v4 --task-definition ${NEW_TASK_DEF_ARN} --force-new-deployment
        env:
          AWS_REGION: eu-north-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
